name: 'Terraform'

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      # Print the current working directory
      - name: Print Working Directory
        run: pwd

      # List contents of the repository to verify file presence
      - name: List All Files
        run: ls -R

      # List contents of the specific Terraform directory
      - name: List Terraform Files
        run: ls -R POC-terraform/env/prod

      # Check for any Terraform files in the directory
      - name: Check for Terraform Configuration Files
        run: |
          if [ -z "$(ls -A POC-terraform/env/prod/*.tf 2>/dev/null)" ]; then
            echo "Error: No Terraform configuration files found in POC-terraform/env/prod"
            exit 1
          fi

      - name: Terraform Init
        run: |
          cd POC-terraform/env/prod
          terraform init

      - name: Terraform Format
        run: |
          cd POC-terraform/env/prod
          terraform fmt -check

      - name: Terraform Plan
        run: |
          cd POC-terraform/env/prod
          terraform plan -input=false -var-file="prod.tfvars"

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          cd POC-terraform/env/prod
          terraform apply -auto-approve -input=false -var-file="prod.tfvars"
